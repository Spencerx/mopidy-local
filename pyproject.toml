[build-system]
requires = ["setuptools >= 66", "setuptools-scm >= 7.1"]
build-backend = "setuptools.build_meta"


[project]
name = "mopidy-local"
description = "Mopidy extension for playing music from your local music archive"
readme = "README.rst"
requires-python = ">= 3.11"
license = { text = "Apache-2.0" }
authors = [{ name = "Stein Magnus Jodal", email = "stein.magnus@jodal.no" }]
classifiers = [
	"Environment :: No Input/Output (Daemon)",
	"Intended Audience :: End Users/Desktop",
	"License :: OSI Approved :: Apache Software License",
	"Operating System :: OS Independent",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
	"Topic :: Multimedia :: Sound/Audio :: Players",
]
dynamic = ["version"]
dependencies = [
	"mopidy >= 4.0.0a1",
	"pykka >= 2.0.1",
	"setuptools >= 66",
	"uritools >= 1.0",
]

[project.optional-dependencies]
lint = ["ruff >= 0.5"]
test = ["pytest", "pytest-cov"]
dev = ["mopidy-local[lint,test]", "tox >= 4.21"]

[project.urls]
Source = "https://github.com/mopidy/mopidy-local"
Issues = "https://github.com/mopidy/mopidy-local/issues"

[project.entry-points."mopidy.ext"]
local = "mopidy_local:Extension"


[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
	"ANN",    # flake8-annotations  # TODO
	"ANN101", # missing-type-self
	"ANN102", # missing-type-cls
	"ANN401", # any-type
	"BLE001", # blind-except  # TODO
	"D",      # pydocstyle
	"EM101",  # raw-string-in-exception  # TODO
	"FIX001", # line-contains-fixme
	"FIX002", # line-contains-todo
	"G002",   # logging-percent-format
	"G004",   # logging-f-string
	"ISC001", # single-line-implicit-string-concatenation
	"PTH123", # builtin-open  # TODO
	"RUF012", # mutable-class-default  # TODO
	"S101",   # assert  # TODO
	"TD002",  # missing-todo-author
	"TD003",  # missing-todo-link
	"TRY003", # raise-vanilla-args
	"TRY400", # error-instead-of-exception
	"UP031",  # printf-string-formatting  # TODO
	#
	# These rules interfere with `ruff format`
	"COM812", # missing-trailing-comma
	"ISC001", # single-line-implicit-string-concatenation
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
	"ANN",     # flake8-annotations
	"ARG",     # flake8-unused-arguments
	"D",       # pydocstyle
	"FBT",     # flake8-boolean-trap
	"PLR0913", # too-many-arguments
	"PLR2004", # magic-value-comparison
	"PT011",   # pytest-raises-too-broad  # TODO
	"PT027",   # pytest-unittest-raises-assertion
	"S101",    # assert
	"SLF001",  # private-member-access
	"TRY002",  # raise-vanilla-class
]


[tool.setuptools_scm]


[tool.tox]
requires = ["tox >= 4.21"]
env_list = ["3.11", "3.12", "3.13", "ruff-lint", "ruff-format"]

[tool.tox.env_run_base]
deps = [".[test]"]
commands = [
	[
		"pytest",
		"--basetemp={envtmpdir}",
		"--cov=mopidy_local",
		"--cov-report=term-missing",
		"{posargs}",
	],
]

[tool.tox.env.ruff-lint]
deps = [".[lint]"]
commands = [["ruff", "check", "."]]

[tool.tox.env.ruff-format]
deps = [".[lint]"]
commands = [["ruff", "format", "--check", "."]]
